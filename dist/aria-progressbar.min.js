!function(e){"function"==typeof define&&define.amd&&define(["jquery"],e)}(function(e,t){"use strict";function a(t,a){var l=this;l.settings=e.extend({},e.fn[r].defaultSettings,a),l.element=e(t),l.template=s,l.value=null,l.valuePercent=null,l.valueText=null,l.init()}var r="ariaProgressbar",s='<div class="{c1}"><div class="{c2}" role="progressbar"></div></div>',l={aVNow:"aria-valuenow",aVTxt:"aria-valuetext",aVMin:"aria-valuemin",aVMax:"aria-valuemax",dPg:"data-progress",dPgTxt:"data-progresstext",t:"true",f:"false"},n=e(t);e.extend(a.prototype,{init:function(){var e=this,t=e.element,a=e.settings;e.template=e.template.replace("{c1}",a.progressClass),e.template=e.template.replace("{c2}",a.progressBarClass),t.append(e.template),e.progress=t.find("."+a.progressClass.split(" ")[0]),e.progressbar=t.find("."+a.progressBarClass),e.progressbar.attr(l.aVMin,a.minVal).attr(l.aVMax,a.maxVal),n.trigger(r+".initialised",[e])},destroy:function(){var e=this;e.progress.remove(),n.trigger(r+".destroy",[e])},update:function(e){var t=this,a=t.settings;t.value=e,t.valueText=t.settings.textLabel.replace("{X}",e),t.valuePercent=(a.maxVal-a.minVal)*e/100,console.log(t.valuePercent),t.progressbar.attr(l.aVNow,e).css("width",t.valuePercent+"%"),t.settings.textLabel&&t.progressbar.attr(l.aVTxt,t.valueText),t.progress.attr(l.dPg,e).attr(l.dPgTxt,t.valueText),n.trigger(r+".updated",[t]),t.value>=a.maxVal&&t.destroy()},methodCaller:function(e,t){var a=this;switch(e){case"update":a.update(t);break;case"destroy":a.destroy()}}}),e.fn[r]=function(t,s){return this.each(function(){var l=this;e.data(l,"plugin_"+r)||"object"!=typeof t&&void 0!==t?"string"==typeof t&&e.data(l,"plugin_"+r).methodCaller(t,s):e.data(l,"plugin_"+r,new a(l,t))})},e.fn[r].defaultSettings={progressClass:"progress",progressBarClass:"progress__bar",minVal:0,maxVal:100,textLabel:"{X} percent completed"}}(jQuery,window));